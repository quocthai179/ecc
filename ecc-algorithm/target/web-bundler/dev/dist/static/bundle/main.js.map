{
  "version": 3,
  "sources": ["../../../app/app.js", "../../../live-reload.js"],
  "sourcesContent": ["// See https://docs.quarkiverse.io/quarkus-web-bundler/dev/advanced-guides.html#web-dependencies\n// for more information about how to import web-dependencies:\n\n// Example:\n// in your pom.xml:\n// <dependency>\n// \t<groupId>org.mvnpm</groupId>\n// \t<artifactId>jquery</artifactId>\n// \t<version>3.7.1</version>\n// \t<scope>provided</scope>\n// </dependency>\n//\n// in this file:\n// import $ from 'jquery'\n\n// This app will be bundled by the Web-Bundler (including the imported libraries) and available using the {#bundle /} tag\n// for more information about how to use the {#bundle /} tag, see https://docs.quarkiverse.io/quarkus-web-bundler/dev/advanced-guides.html#bundle-tag\n// Sets the number of stars we wish to display\n\nconst numStars = 1000;\n\n// For every star we want to display\nfor (let i = 0; i < numStars; i++) {\n    const star = document.createElement(\"div\");\n    star.className = \"star\";\n    const xy = getRandomPosition();\n    star.style.left = xy[0] + 'px';\n    star.style.bottom = xy[1] + 'px';\n    document.body.append(star);\n}\n\n// Gets random x, y values based on the size of the container\nfunction getRandomPosition() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    const randomX = Math.floor(Math.random()*width);\n    const randomY = Math.floor(Math.random()*height);\n    return [randomX,randomY];\n}", "let isReco = false;\n\nconsole.log(\"web-bundler live-reload is enabled\");\n\nfunction connectToChanges() {\n    console.debug(\"connecting to web-bundler live-reload: \" + isReco)\n    const eventSource = new EventSource(process.env.LIVE_RELOAD_PATH);\n    eventSource.onopen = () => {\n        if (isReco) {\n            // server is back-on, let's reload to get the latest\n            location.reload();\n        }\n\n        console.debug(\"connected to web-bundler live-reload\");\n    };\n    eventSource.addEventListener('bundling-error', e => {\n        eventSource.close();\n        location.reload();\n    });\n    eventSource.addEventListener('change', e => {\n        if (!e.data) {\n            return;\n        }\n        const {added, removed, updated} = JSON.parse(e.data);\n        const updatedCss = updated.filter(p => p.endsWith(\".css\")).length;\n        if (!added.length && !removed.length && updated.length > 0 && updatedCss === updated.length) {\n            for (const link of document.getElementsByTagName(\"link\")) {\n                const url = new URL(link.href);\n                for (const css of updated)\n                    if (url.host === location.host && url.pathname === css) {\n                        console.log(\"Live-reload: \" + css);\n                        const next = link.cloneNode();\n                        next.href = css + '?' + Math.random().toString(36).slice(2);\n                        next.onload = () => link.remove();\n                        next.onerror = (e) => {\n                            next.remove();\n                            console.error(e);\n                        };\n                        link.parentNode.insertBefore(next, link.nextSibling);\n                        return;\n                    }\n            }\n        }\n        location.reload();\n    });\n\n    eventSource.onerror = (e) => {\n        console.debug(\"web-bundler live-reload connection lost\");\n        isReco = true;\n    };\n}\n\nfetch(process.env.LIVE_RELOAD_PATH)\n    .then(response => {\n        if (response.status === 429) {\n            return Promise.reject(new Error(\"There are too many live-reload open connections.\"));\n        }\n        return response;\n    })\n    .then(connectToChanges)\n    .catch(error => {\n        console.error('Error:', error.message);\n    });\n"],
  "mappings": ";AAmBA,IAAM,WAAW;AAGjB,SAAS,IAAI,GAAG,IAAI,UAAU,KAAK;AAC/B,QAAM,OAAO,SAAS,cAAc,KAAK;AACzC,OAAK,YAAY;AACjB,QAAM,KAAK,kBAAkB;AAC7B,OAAK,MAAM,OAAO,GAAG,CAAC,IAAI;AAC1B,OAAK,MAAM,SAAS,GAAG,CAAC,IAAI;AAC5B,WAAS,KAAK,OAAO,IAAI;AAC7B;AAGA,SAAS,oBAAoB;AACzB,QAAM,QAAQ,OAAO;AACrB,QAAM,SAAS,OAAO;AACtB,QAAM,UAAU,KAAK,MAAM,KAAK,OAAO,IAAE,KAAK;AAC9C,QAAM,UAAU,KAAK,MAAM,KAAK,OAAO,IAAE,MAAM;AAC/C,SAAO,CAAC,SAAQ,OAAO;AAC3B;;;ACtCA,IAAI,SAAS;AAEb,QAAQ,IAAI,oCAAoC;AAEhD,SAAS,mBAAmB;AACxB,UAAQ,MAAM,4CAA4C,MAAM;AAChE,QAAM,cAAc,IAAI,YAAY,mBAA4B;AAChE,cAAY,SAAS,MAAM;AACvB,QAAI,QAAQ;AAER,eAAS,OAAO;AAAA,IACpB;AAEA,YAAQ,MAAM,sCAAsC;AAAA,EACxD;AACA,cAAY,iBAAiB,kBAAkB,OAAK;AAChD,gBAAY,MAAM;AAClB,aAAS,OAAO;AAAA,EACpB,CAAC;AACD,cAAY,iBAAiB,UAAU,OAAK;AACxC,QAAI,CAAC,EAAE,MAAM;AACT;AAAA,IACJ;AACA,UAAM,EAAC,OAAO,SAAS,QAAO,IAAI,KAAK,MAAM,EAAE,IAAI;AACnD,UAAM,aAAa,QAAQ,OAAO,OAAK,EAAE,SAAS,MAAM,CAAC,EAAE;AAC3D,QAAI,CAAC,MAAM,UAAU,CAAC,QAAQ,UAAU,QAAQ,SAAS,KAAK,eAAe,QAAQ,QAAQ;AACzF,iBAAW,QAAQ,SAAS,qBAAqB,MAAM,GAAG;AACtD,cAAM,MAAM,IAAI,IAAI,KAAK,IAAI;AAC7B,mBAAW,OAAO;AACd,cAAI,IAAI,SAAS,SAAS,QAAQ,IAAI,aAAa,KAAK;AACpD,oBAAQ,IAAI,kBAAkB,GAAG;AACjC,kBAAM,OAAO,KAAK,UAAU;AAC5B,iBAAK,OAAO,MAAM,MAAM,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,MAAM,CAAC;AAC1D,iBAAK,SAAS,MAAM,KAAK,OAAO;AAChC,iBAAK,UAAU,CAACA,OAAM;AAClB,mBAAK,OAAO;AACZ,sBAAQ,MAAMA,EAAC;AAAA,YACnB;AACA,iBAAK,WAAW,aAAa,MAAM,KAAK,WAAW;AACnD;AAAA,UACJ;AAAA,MACR;AAAA,IACJ;AACA,aAAS,OAAO;AAAA,EACpB,CAAC;AAED,cAAY,UAAU,CAAC,MAAM;AACzB,YAAQ,MAAM,yCAAyC;AACvD,aAAS;AAAA,EACb;AACJ;AAEA,MAAM,mBAA4B,EAC7B,KAAK,cAAY;AACd,MAAI,SAAS,WAAW,KAAK;AACzB,WAAO,QAAQ,OAAO,IAAI,MAAM,kDAAkD,CAAC;AAAA,EACvF;AACA,SAAO;AACX,CAAC,EACA,KAAK,gBAAgB,EACrB,MAAM,WAAS;AACZ,UAAQ,MAAM,UAAU,MAAM,OAAO;AACzC,CAAC;",
  "names": ["e"]
}
